# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Deploy Core
on:
    workflow_call:
        inputs:
            commit:
                type: string
                required: true
            environment:
                type: string
                required: true
            role:
                type: string
                required: true
        secrets:
            SSH_PRIVATE_KEY:
                required: true
            SSH_FINGERPRINT:
                required: true
            STORAGE_ROOT_CERTIFICATE:
                required: true
            CLOUDFLARE_ORIGIN_CERTIFICATE:
                required: true
            CLOUDFLARE_PRIVATE_KEY:
                required: true
            SENDGRID_API_KEY:
                required: true
defaults:
    run:
        shell: bash
env:
    DOTNET_CLI_TELEMETRY_OPTOUT: true
    DOTNET_GENERATE_ASPNET_CERTIFICATE: false
    DOTNET_NOLOGO: true
jobs:
    deploy-server:
        runs-on: ubuntu-22.04
        steps:
            - name: Clone repository
              uses: actions/checkout@v3.5.3
              with:
                  ref: ${{ inputs.commit }}
                  fetch-depth: 0
                  submodules: recursive
            - name: Set up .NET
              uses: actions/setup-dotnet@v3.2.0
            - name: Build project
              run: |
                  ./cake -c Release
            - name: Stop service
              uses: appleboy/ssh-action@v0.1.10
              with:
                  host: ${{ inputs.environment }}.${{ inputs.role }}.tera-arise.io
                  fingerprint: ${{ secrets.SSH_FINGERPRINT }}
                  username: root
                  key: ${{ secrets.SSH_PRIVATE_KEY }}
                  script_stop: true
                  script: |
                      if systemctl list-unit-files arised-${{ inputs.role }}.service -a -l -t service > /dev/null; then
                          systemctl stop arised-${{ inputs.role }}
                          systemctl disable arised-${{ inputs.role }}
                      fi
            - name: Write storage certificate
              env:
                  STORAGE_ROOT_CERTIFICATE: ${{ secrets.STORAGE_ROOT_CERTIFICATE }}
              run: |
                  echo "$STORAGE_ROOT_CERTIFICATE" > postgresql.pem
              working-directory: out/pub/src/server/daemon/release_linux-x64
            - name: Write Cloudflare certificates
              if: inputs.role == 'web'
              env:
                  CLOUDFLARE_ORIGIN_CERTIFICATE: ${{ secrets.CLOUDFLARE_ORIGIN_CERTIFICATE }}
                  CLOUDFLARE_PRIVATE_KEY: ${{ secrets.CLOUDFLARE_PRIVATE_KEY }}
              run: |
                  echo "$CLOUDFLARE_ORIGIN_CERTIFICATE" > cloudflare.pem
                  echo "$CLOUDFLARE_PRIVATE_KEY" > cloudflare.key
              working-directory: out/pub/src/server/daemon/release_linux-x64
            - name: Write SendGrid key
              if: inputs.role == 'web'
              env:
                  SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
              run: |
                  sed -e "s/SENDGRID_API_KEY/$SENDGRID_API_KEY/g" -i arised.{production,staging}.json
              working-directory: out/pub/src/server/daemon/release_linux-x64
            - name: Generate unit file
              run: |
                  sed -e "s/ENVIRONMENT/${{ inputs.environment }}/g" -e "s/ROLE/${{ inputs.role }}/g" arised.service > arised-${{ inputs.role }}.service
              working-directory: src/server/daemon
            - name: Upload unit file
              uses: appleboy/scp-action@v0.1.4
              with:
                  host: ${{ inputs.environment }}.${{ inputs.role }}.tera-arise.io
                  fingerprint: ${{ secrets.SSH_FINGERPRINT }}
                  username: root
                  key: ${{ secrets.SSH_PRIVATE_KEY }}
                  source: src/server/daemon/arised-${{ inputs.role }}.service
                  strip_components: 3
                  target: /etc/systemd/system
            - name: Upload daemon build
              uses: appleboy/scp-action@v0.1.4
              with:
                  host: ${{ inputs.environment }}.${{ inputs.role }}.tera-arise.io
                  fingerprint: ${{ secrets.SSH_FINGERPRINT }}
                  username: root
                  key: ${{ secrets.SSH_PRIVATE_KEY }}
                  source: out/pub/src/server/daemon/release_linux-x64/*
                  strip_components: 6
                  target: /opt/arise
                  rm: true
            - name: Start service
              uses: appleboy/ssh-action@v0.1.10
              with:
                  host: ${{ inputs.environment }}.${{ inputs.role }}.tera-arise.io
                  fingerprint: ${{ secrets.SSH_FINGERPRINT }}
                  username: root
                  key: ${{ secrets.SSH_PRIVATE_KEY }}
                  script_stop: true
                  script: |
                      systemctl enable arised-${{ inputs.role }}
                      systemctl start arised-${{ inputs.role }}
