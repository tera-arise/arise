<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <AssemblyName>Arise.Client.Launcher</AssemblyName>
        <AvaloniaUseCompiledBindingsByDefault>true</AvaloniaUseCompiledBindingsByDefault>
        <RootNamespace>$(AssemblyName)</RootNamespace>
    </PropertyGroup>

    <PropertyGroup>
        <_ClientRevision>r387486</_ClientRevision>
        <_ClientArchive>$(BaseIntermediateOutputPath)$(_ClientRevision).zip</_ClientArchive>
        <_ClientDirectory>$(BaseIntermediateOutputPath)$(_ClientRevision)/</_ClientDirectory>
        <_ClientStamp>$(BaseIntermediateOutputPath)$(_ClientRevision).stamp</_ClientStamp>
    </PropertyGroup>

    <ItemGroup>
        <Using Include="Arise.IO" />
        <Using Include="Arise.Reflection" />
        <Using Include="Avalonia" />
        <Using Include="Avalonia.Controls" />
        <Using Include="Avalonia.Controls.ApplicationLifetimes" />
        <Using Include="Avalonia.Controls.Templates" />
        <Using Include="Avalonia.Logging" />
        <Using Include="Avalonia.Markup.Xaml" />
        <Using Include="Avalonia.Media.Imaging" />
        <Using Include="Avalonia.Platform" />
        <Using Include="Avalonia.ReactiveUI" />
        <Using Include="Avalonia.Threading" />
        <Using Include="Injectio.Attributes" />
        <Using Include="Microsoft.Extensions.Configuration" />
        <Using Include="Microsoft.Extensions.DependencyInjection" />
        <Using Include="Microsoft.Extensions.Hosting" />
        <Using Include="Microsoft.Extensions.Logging" />
        <Using Include="Microsoft.Extensions.Options" />
        <Using Include="NAudio.Extras" />
        <Using Include="NAudio.Vorbis" />
        <Using Include="NAudio.Wave" />
        <Using Include="ReactiveUI" />
        <Using Include="Serilog" />
        <Using Include="Serilog.Events" />
        <Using Include="Serilog.Sinks.SystemConsole.Themes" />
        <Using Include="System.Reactive.Disposables" />
    </ItemGroup>

    <ItemGroup>
        <AvaloniaResource Include="../../../arise.png"
                          Link="arise.png" />
    </ItemGroup>

    <ItemGroup>
        <ProjectReference Include="../../shared/common/common.csproj" />
        <ProjectReference Include="../../tools/patcher/patcher.csproj"
                          Private="false"
                          ReferenceOutputAssembly="false" />
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="Avalonia.Fonts.Inter" />
        <PackageReference Include="Avalonia.ReactiveUI" />
        <PackageReference Include="Avalonia.Skia" />
        <PackageReference Include="Avalonia.Themes.Fluent" />
        <PackageReference Include="Avalonia.Win32" />
        <PackageReference Include="Injectio"
                          PrivateAssets="all" />
        <PackageReference Include="Markdown.Avalonia.Tight" />
        <PackageReference Include="Material.Icons.Avalonia" />
        <PackageReference Include="Microsoft.Extensions.Hosting" />
        <PackageReference Include="Microsoft.Windows.CsWin32"
                          PrivateAssets="all" />
        <PackageReference Include="Microsoft.Windows.SDK.Win32Docs"
                          PrivateAssets="all" />
        <PackageReference Include="Microsoft.Windows.SDK.Win32Metadata"
                          PrivateAssets="all" />
        <PackageReference Include="NAudio.Extras" />
        <PackageReference Include="NAudio.Vorbis" />
        <PackageReference Include="Serilog.Extensions.Hosting" />
        <PackageReference Include="Serilog.Sinks.Console" />
        <PackageReference Include="Vezel.Novadrop.Client" />
        <PackageReference Include="Vezel.Ruptura.Injection" />
    </ItemGroup>

    <Target Name="_ApplyServerUriAttributes"
            BeforeTargets="GetAssemblyAttributes">
        <MSBuild Projects="$(AriseVendorProjectPath)"
                 Targets="GetWebServerUri">
            <Output TaskParameter="TargetOutputs"
                    ItemName="AriseWebServerUri" />
        </MSBuild>
        <MSBuild Projects="$(AriseVendorProjectPath)"
                 Targets="GetWorldServerUri">
            <Output TaskParameter="TargetOutputs"
                    ItemName="AriseWorldServerUri" />
        </MSBuild>

        <PropertyGroup>
            <_WebServerUri>@(AriseWebServerUri)</_WebServerUri>
            <_WorldServerUri>@(AriseWorldServerUri)</_WorldServerUri>
        </PropertyGroup>

        <ItemGroup>
            <AssemblyMetadata Include="Arise.WebServerUri"
                              Value="$(_WebServerUri)"
                              Condition="'$(_WebServerUri)' != ''" />
            <AssemblyMetadata Include="Arise.WorldServerUri"
                              Value="$(_WorldServerUri)"
                              Condition="'$(_WorldServerUri)' != ''" />
        </ItemGroup>
    </Target>

    <Target Name="_AddMultimediaAssets"
            BeforeTargets="AddAvaloniaResources">
        <MSBuild Projects="$(AriseVendorProjectPath)"
                 Targets="GetMultimediaAssetsPath">
            <Output TaskParameter="TargetOutputs"
                    ItemName="AriseMultimediaAssetsPath" />
        </MSBuild>

        <PropertyGroup>
            <_MultimediaAssetsPath>@(AriseMultimediaAssetsPath)</_MultimediaAssetsPath>
        </PropertyGroup>

        <ItemGroup>
            <_MultimediaAsset Include="$(_MultimediaAssetsPath)/**" />
            <AvaloniaResource Include="@(_MultimediaAsset)"
                              Link="assets/%(RecursiveDir)%(Filename)%(Extension)" />
        </ItemGroup>
    </Target>

    <Target Name="_RestoreClientExecutable"
            AfterTargets="_GenerateRestoreProjectPathWalk">
        <DownloadFile SourceUrl="https://github.com/alexrp/tera-re/releases/download/$(_ClientRevision)/$(_ClientRevision).zip"
                      DestinationFolder="$(BaseIntermediateOutputPath)"
                      Condition="!Exists('$(_ClientArchive)')" />

        <Unzip SourceFiles="$(_ClientArchive)"
               DestinationFolder="$(BaseIntermediateOutputPath)"
               Condition="!Exists('$(_ClientStamp)')" />

        <Touch Files="$(_ClientStamp)"
               AlwaysCreate="true" />
    </Target>

    <!-- TODO: Specify inputs/outputs to make this target incremental. -->
    <Target Name="_PackClientExecutable"
            BeforeTargets="AddAvaloniaResources">
        <PropertyGroup>
            <_ClientPatchedPath>$(_ClientDirectory)TERA.arise.exe</_ClientPatchedPath>
        </PropertyGroup>

        <Copy SourceFiles="$(_ClientDirectory)TERA.unpacked.exe"
              DestinationFiles="$(_ClientPatchedPath)" />

        <ItemGroup>
            <FileWrites Include="$(_ClientPatchedPath)" />
        </ItemGroup>

        <Exec Command="dotnet run $(_ClientPatchedPath) --project ../../tools/patcher -c $(Configuration) --no-build"
              StandardOutputImportance="low"
              StandardErrorImportance="low" />

        <ItemGroup>
            <AvaloniaResource Include="$(_ClientPatchedPath)"
                              Link="assets/TERA.arise.exe" />
        </ItemGroup>
    </Target>
</Project>
