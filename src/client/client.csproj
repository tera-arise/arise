<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <AssemblyName>arise</AssemblyName>
        <AvaloniaUseCompiledBindingsByDefault>true</AvaloniaUseCompiledBindingsByDefault>
        <CopyDebugSymbolFilesFromPackages Condition="'$(DebugSymbols)' == 'true'">true</CopyDebugSymbolFilesFromPackages>
        <EventSourceSupport>false</EventSourceSupport>
        <HttpActivityPropagationSupport>false</HttpActivityPropagationSupport>
        <IsPublishable>true</IsPublishable>
        <!-- We use unstable Vezel.Novadrop.Interop APIs. -->
        <NoWarn>
            $(NoWarn);
            ND0001
        </NoWarn>
        <NullabilityInfoContextSupport>false</NullabilityInfoContextSupport>
        <OutputType>WinExe</OutputType>
        <RootNamespace>Arise.Client</RootNamespace>
        <RuntimeIdentifier>win-x64</RuntimeIdentifier>
        <RuntimeIdentifiers />
        <SelfContained>true</SelfContained>
        <!-- This is unfortunately needed due to the patcher reference. -->
        <ValidateExecutableReferencesMatchSelfContained>false</ValidateExecutableReferencesMatchSelfContained>
    </PropertyGroup>

    <PropertyGroup>
        <AriseEmbedNetworkCertificate>arise</AriseEmbedNetworkCertificate>
    </PropertyGroup>

    <ItemGroup>
        <Using Include="Arise.Bridge" />
        <Using Include="Arise.Data" />
        <Using Include="Arise.Gateway" />
        <Using Include="Arise.IO" />
        <Using Include="Arise.Net" />
        <Using Include="Arise.Net.Packets" />
        <Using Include="Arise.Net.Packets.Server" />
        <Using Include="Arise.Net.Sessions" />
        <Using Include="Arise.Reflection" />
        <Using Include="Avalonia" />
        <Using Include="Avalonia.Controls" />
        <Using Include="Avalonia.Controls.ApplicationLifetimes" />
        <Using Include="Avalonia.Controls.Templates" />
        <Using Include="Avalonia.Logging" />
        <Using Include="Avalonia.Markup.Xaml" />
        <Using Include="Avalonia.Platform" />
        <Using Include="Avalonia.Threading" />
        <Using Include="CommunityToolkit.Mvvm.ComponentModel" />
        <Using Include="CommunityToolkit.Mvvm.Input" />
        <Using Include="Iced.Intel" />
        <Using Include="Microsoft.Extensions.Configuration" />
        <Using Include="Microsoft.Extensions.DependencyInjection" />
        <Using Include="Microsoft.Extensions.DependencyInjection.Extensions" />
        <Using Include="Microsoft.Extensions.Hosting" />
        <Using Include="Microsoft.Extensions.Logging" />
        <Using Include="Microsoft.Extensions.ObjectPool" />
        <Using Include="Microsoft.Extensions.Options" />
        <Using Include="NAudio.Extras" />
        <Using Include="NAudio.Vorbis" />
        <Using Include="NAudio.Wave" />
        <Using Include="Vezel.Cathode.Extensions.Logging" />
    </ItemGroup>

    <ItemGroup>
        <ProjectReference Include="../shared/data/data.csproj" />
        <ProjectReference Include="../shared/game/game.csproj" />
        <ProjectReference Include="../shared/gateway/gateway.csproj" />
        <ProjectReference Include="../tools/patcher/patcher.csproj"
                          Private="false"
                          ReferenceOutputAssembly="false"
                          OutputItemType="ArisePatcher" />
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="Avalonia.Fonts.Inter" />
        <PackageReference Include="Avalonia.Skia" />
        <PackageReference Include="Avalonia.Themes.Fluent" />
        <PackageReference Include="Avalonia.Win32" />
        <PackageReference Include="CommunityToolkit.Mvvm" />
        <PackageReference Include="Material.Icons.Avalonia" />
        <PackageReference Include="Microsoft.ClearScript.V8" />
        <PackageReference Include="Microsoft.ClearScript.V8.Native.win-x64" />
        <PackageReference Include="Microsoft.Extensions.Hosting" />
        <PackageReference Include="Microsoft.Extensions.Http" />
        <PackageReference Include="Microsoft.Windows.CsWin32"
                          PrivateAssets="all" />
        <PackageReference Include="NAudio.Extras" />
        <PackageReference Include="NAudio.Vorbis" />
        <PackageReference Include="Vezel.Cathode.Extensions" />
        <PackageReference Include="Vezel.Novadrop.Interop" />
        <PackageReference Include="Vezel.Ruptura.Hosting" />
        <PackageReference Include="Vezel.Ruptura.Injection" />
        <PackageReference Include="Vezel.Ruptura.Memory" />
    </ItemGroup>

    <Target Name="_ApplyServerUriAttributes"
            BeforeTargets="GetAssemblyAttributes">
        <MSBuild Projects="$(AriseVendorProjectPath)"
                 Targets="GetGatewayServerUri">
            <Output TaskParameter="TargetOutputs"
                    ItemName="AriseGatewayServerUri" />
        </MSBuild>
        <MSBuild Projects="$(AriseVendorProjectPath)"
                 Targets="GetGameServerUri">
            <Output TaskParameter="TargetOutputs"
                    ItemName="AriseGameServerUri" />
        </MSBuild>

        <PropertyGroup>
            <_GatewayServerUri>@(AriseGatewayServerUri)</_GatewayServerUri>
            <_GameServerUri>@(AriseGameServerUri)</_GameServerUri>
        </PropertyGroup>

        <ItemGroup>
            <AssemblyMetadata Include="Arise.GatewayServerUri"
                              Value="$(_GatewayServerUri)"
                              Condition="'$(_GatewayServerUri)' != ''" />
            <AssemblyMetadata Include="Arise.GameServerUri"
                              Value="$(_GameServerUri)"
                              Condition="'$(_GameServerUri)' != ''" />
        </ItemGroup>
    </Target>

    <Target Name="AddGameIcons"
            DependsOnTargets="GetGameIcons"
            BeforeTargets="AssignTargetPaths">
        <ItemGroup>
            <AvaloniaResource Include="@(AriseGameIcon)"
                              Link="arise%(Extension)"
                              Condition="'%(Extension)' == '.png'" />
        </ItemGroup>
    </Target>

    <Target Name="_AddMultimediaAssets"
            BeforeTargets="AddAvaloniaResources">
        <MSBuild Projects="$(AriseVendorProjectPath)"
                 Targets="GetMultimediaAssetsPath">
            <Output TaskParameter="TargetOutputs"
                    ItemName="AriseMultimediaAssetsPath" />
        </MSBuild>

        <PropertyGroup>
            <_MultimediaAssetsPath>@(AriseMultimediaAssetsPath)</_MultimediaAssetsPath>
        </PropertyGroup>

        <ItemGroup>
            <_MultimediaAsset Include="$(_MultimediaAssetsPath)/**" />
            <AvaloniaResource Include="@(_MultimediaAsset)"
                              Link="%(RecursiveDir)%(Filename)%(Extension)" />
        </ItemGroup>
    </Target>

    <Target Name="_SetClientExecutableInfo">
        <PropertyGroup>
            <_ClientExecutableRevision>r387486</_ClientExecutableRevision>
            <_ClientExecutableDownloadPath>$(BaseIntermediateOutputPath)$(_ClientExecutableRevision)/</_ClientExecutableDownloadPath>
            <_ClientExecutableUnpackedPath>$(_ClientExecutableDownloadPath)TERA.unpacked.exe</_ClientExecutableUnpackedPath>
            <_ClientExecutableCachePath>$(IntermediateOutputPath)TERA.arise.cache</_ClientExecutableCachePath>
            <_ClientExecutablePatchedPath>$(IntermediateOutputPath)TERA.arise.exe</_ClientExecutablePatchedPath>
        </PropertyGroup>
    </Target>

    <Target Name="_RestoreClientExecutable"
            AfterTargets="_GenerateRestoreProjectPathWalk"
            DependsOnTargets="_SetClientExecutableInfo">
        <DownloadFile SourceUrl="https://github.com/alexrp/tera-re/releases/download/$(_ClientExecutableRevision)/TERA.unpacked.exe"
                      DestinationFolder="$(_ClientExecutableDownloadPath)"
                      Condition="!Exists('$(_ClientExecutableUnpackedPath)')" />
    </Target>

    <Target Name="_WriteClientExecutableCache"
            DependsOnTargets="_SetClientExecutableInfo">
        <Hash ItemsToHash="$(MSBuildAllProjects); @(ArisePatcher); $(_ClientExecutableUnpackedPath)"
              IgnoreCase="true">
            <Output TaskParameter="HashResult"
                    PropertyName="_ClientExecutableCacheHash" />
        </Hash>

        <WriteLinesToFile Lines="$(_ClientExecutableCacheHash)"
                          File="$(_ClientExecutableCachePath)"
                          Overwrite="true"
                          WriteOnlyWhenDifferent="true" />

        <ItemGroup>
            <FileWrites Include="$(_ClientExecutableCachePath)" />
        </ItemGroup>
    </Target>

    <Target Name="_PackClientExecutable"
            Inputs="@(ArisePatcher); $(_ClientExecutableUnpackedPath); $(_ClientExecutableCachePath)"
            Outputs="$(_ClientExecutablePatchedPath)"
            DependsOnTargets="_WriteClientExecutableCache"
            BeforeTargets="AddAvaloniaResources">
        <Exec Command="dotnet @(ArisePatcher) $(_ClientExecutableUnpackedPath) $(_ClientExecutablePatchedPath)"
              StandardOutputImportance="low"
              StandardErrorImportance="low" />

        <ItemGroup>
            <FileWrites Include="$(_ClientExecutablePatchedPath)" />
        </ItemGroup>

        <ItemGroup>
            <AvaloniaResource Include="$(_ClientExecutablePatchedPath)"
                              Link="TERA.arise.exe" />
        </ItemGroup>
    </Target>

    <Target Name="_WriteDeploymentManifest"
            DependsOnTargets="GetGameRevision"
            AfterTargets="AfterBuild">
        <PropertyGroup>
            <_ManifestJsonPath>$(OutputPath)manifest.json</_ManifestJsonPath>
        </PropertyGroup>

        <PropertyGroup>
            <_ManifestJson>
                <![CDATA[
{
  "version": "$(AriseGameRevision)"
}
                ]]>
            </_ManifestJson>
        </PropertyGroup>

        <WriteLinesToFile File="$(_ManifestJsonPath)"
                          Lines="$(_ManifestJson)"
                          Overwrite="true"
                          WriteOnlyWhenDifferent="true" />

        <ItemGroup>
            <FileWrites Include="$(_ManifestJsonPath)" />
        </ItemGroup>
    </Target>
</Project>
